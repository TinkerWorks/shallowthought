apiVersion: v1
kind: Namespace
metadata:
  name: immich
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: immich
  namespace: immich
spec:
  chart: oci://ghcr.io/immich-app/immich-charts/immich
  targetNamespace: immich
  valuesContent: |-
    env:
    # REDIS_HOSTNAME: '{{ printf "%s-redis-master" .Release.Name }}'
      DB_HOSTNAME: "postgresql.db"
      DB_USERNAME: "immich"
      DB_DATABASE_NAME: "immich"
      # -- You should provide your own secret outside of this helm-chart and use `postgresql.global.postgresql.auth.existingSecret` to provide credentials to the postgresql instance
      DB_PASSWORD: "immich"
      # IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'
      TZ: "Europe/Bucharest"
    redis:
      enabled: true
      architecture: standalone
      auth:
        enabled: false
    image:
      tag: "v1.135.3"
    immich:
      metrics:
        # Enabling this will create the service monitors needed to monitor immich with the prometheus operator
        enabled: false
      persistence:
        # Main data store for all photos shared between different components.
        library:
        # Automatically creating the library volume is not supported by this chart
        # You have to specify an existing PVC to use
          existingClaim: "immich-pvc"
    # configuration is immich-config.json converted to yaml
    # ref: https://immich.app/docs/install/config-file/
    server:
      persistence:
        pictures-ash:
          enabled: true
          type: hostPath
          hostPath: /home-storage/ash/Pictures
        pictures-shared:
          enabled: true
          type: hostPath
          hostPath: /home-storage/shared/Pictures
        pictures-babycakes:
          enabled: true
          type: hostPath
          hostPath: /home-storage/babycakes/Pictures

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: immich-pvc
  namespace: immich
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: immich-storage
  selector:
    matchLabels:
      volume: immich-local
  resources:
    requests:
      storage: 500Gi

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: immich-pv
  labels:
    volume: immich-local
spec:
  capacity:
    storage: 500Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: immich-storage
  local:
    path: /srv/immich/
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - shallowthought

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: immich-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: immich
  namespace: immich
spec:
  entryPoints:
    - web
    - websecure
    - e-web
    - e-websecure
  routes:
    - match: Host(`immich.tinker.haus`)
      kind: Rule
      services:
        - name: immich-server
          port: 2283
      middlewares:
        - name: crowdsec-bouncer@kubernetescrd
        - name: kube-system-security-headers@kubernetescrd
        - name: immich-strict-transport-security@kubernetescrd

---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strict-transport-security
  namespace: immich
spec:
  headers:
    # Strict-Transport-Security
    stsPreload: true
    stsSeconds: 15552000
    customFrameOptionsValue: SAMEORIGIN
    customResponseHeaders:
      # Content-Security-Policy
      #Content-Security-Policy: "default-src 'self'; script-src 'self' https://trusted.cdn.com; object-src 'none';"
      #Content-Security-Policy: "default-src 'self' http: https: data: blob: 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval';"
      # X-Content-Type-Options
      X-Content-Type-Options: "nosniff"
      # Referrer-Policy
      Referrer-Policy: "no-referrer-when-downgrade"
      # Permissions-Policy
      Permissions-Policy: "geolocation=(), microphone=(), camera=(), fullscreen=(self)"
      # The anti-clickjacking X-Frame-Options header
      X-Frame-Options: "SAMEORIGIN"
