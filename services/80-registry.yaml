apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: services
spec:
  selector:
    matchLabels:
      app: registry
  replicas: 1
  template:
    metadata:
      labels:
        app: registry
    spec:
      priorityClassName: system-cluster-critical
      containers:
      - name: registry
        image: docker-cache.tinker.haus/library/registry
        ports:
        - name: main
          containerPort: 5000
        volumeMounts:
          - name: registry
            mountPath: /var/lib/registry
          - name: registry-config-yml
            mountPath: "/etc/docker/registry"
            readOnly: true
      volumes:
        - name: registry
          hostPath:
            path: /var/srv/services/registry
            type: DirectoryOrCreate
        - name: registry-config-yml
          configMap:
            name: registry-config-yml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-config-yml
  namespace: services
data:
  config.yml: |-
   version: 0.1
   log:
     fields:
       service: registry
   storage:
     cache:
       blobdescriptor: inmemory
     filesystem:
       rootdirectory: /var/lib/registry
   http:
     addr: :5000
     headers:
       X-Content-Type-Options: [nosniff]
   health:
     storagedriver:
       enabled: true
       interval: 10s
       threshold: 3
   delete:
     enabled: true

---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: services
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  type: NodePort
  selector:
    app: registry

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: registry
  namespace: services
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`registry.tinker.haus`)
      kind: Rule
      services:
        - name: registry
          port: 80
      middlewares:
        - name: default-ip-whitelist-local@kubernetescrd
        - name: nextcloud-nextcloud-redirect@kubernetescrd
