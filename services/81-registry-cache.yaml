apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-cache
  namespace: services
spec:
  selector:
    matchLabels:
      app: docker-cache
  replicas: 1
  template:
    metadata:
      labels:
        app: docker-cache
    spec:
      priorityClassName: system-cluster-critical
      containers:
      - name: docker-cache
        image: docker.io/library/registry
         # imagePullPolicy: IfNotPresent
        ports:
        - name: main
          containerPort: 5000
        volumeMounts:
          - name: registry
            mountPath: /var/lib/registry
          - name: docker-cache-config-yml
            mountPath: "/etc/docker/registry"
            readOnly: true
      volumes:
        - name: registry
          hostPath:
            path: /srv/services/docker-cache
            type: DirectoryOrCreate
        - name: docker-cache-config-yml
          configMap:
            name: docker-cache-config-yml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: docker-cache-config-yml
  namespace: services
data:
  config.yml: |-
   version: 0.1
   log:
     fields:
       service: registry
   storage:
     cache:
       blobdescriptor: inmemory
     filesystem:
       rootdirectory: /var/lib/registry
   http:
     addr: :5000
     headers:
       X-Content-Type-Options: [nosniff]
   health:
     storagedriver:
       enabled: true
       interval: 10s
       threshold: 3
   delete:
     enabled: true
   proxy:
     remoteurl: https://registry-1.docker.io

---
apiVersion: v1
kind: Service
metadata:
  name: docker-cache
  namespace: services
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  type: NodePort
  selector:
    app: docker-cache

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: docker-cache
  namespace: services
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`docker-cache.tinker.haus`)
      kind: Rule
      services:
        - name: docker-cache
          port: 80

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: high-priority-registry
value: 900000
globalDefault: false
description: "This priority class should be used for XYZ service pods only."
