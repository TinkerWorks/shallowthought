apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: traefik
  name: traefik-ingress-controller

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: traefik
  namespace: traefik
  labels:
    app: traefik
spec:
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      hostNetwork: true
      priorityClassName: system-node-critical
      containers:
      - name: traefik
        image: library/traefik:latest
        imagePullPolicy: Always
        args:
            - --log.level=INFO
            - --pilot.dashboard=false
            - --api.dashboard=true
            - --api.insecure=true
            - --accesslog
            - --metrics=true
            - --metrics.influxdb=true
            - --metrics.influxdb.address=influxdb:8086
            - --metrics.influxdb.protocol=http
            - --metrics.influxdb.database=traefik
            - --entrypoints.web.Address=:80
            - --entrypoints.websecure.Address=:443
            - --entrypoints.websecure.http.tls.certResolver=myresolver
            - --entrypoints.websecure.http.tls.domains[0].main=tinker.haus
            - --entrypoints.influxdb.Address=:8086
            - --entrypoints.influxdbudp.Address=:8089/udp
            - --entrypoints.traefik.Address=:30002
            - --entrypoints.transmissiontcp.Address=:51413
            - --entrypoints.transmissionudp.Address=:51413/udp
            - --certificatesResolvers.myresolver.acme.dnsChallenge.provider=cloudflare
            - --certificatesResolvers.myresolver.acme.email=alex.sever.h@gmail.com
            - --certificatesResolvers.myresolver.acme.storage=/data/acme.json
            - --providers.kubernetescrd
            - --providers.kubernetescrd.allowCrossNamespace=true
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
        - containerPort: 30002
          hostPort: 30002
        - containerPort: 8086
          hostPort: 8086
        - containerPort: 28080
          hostPort: 28080
        - containerPort: 51413
          hostPort: 51413
        - containerPort: 51413
          hostPort: 51413
          protocol: UDP
        env:
        - name: TZ
          value: "Europe/Bucharest"
        - name: CF_API_EMAIL_FILE
          value: "/cloudflare/user"
        - name: CF_API_KEY_FILE
          value: "/cloudflare/key"
        volumeMounts:
        - name: cloudflare-secret
          mountPath: /cloudflare
          readOnly: true
        - mountPath: "/data"
          name: data
#        - mountPath: "/dynamicconf"
#          name: dynamicconf
      volumes:
      - name: cloudflare-secret
        secret:
          secretName: cloudflare-secret
      - name: data
        hostPath:
          path: /var/srv/traefik/traefik/data
          type: DirectoryOrCreate
      - name: dynamicconf
        hostPath:
          path: /var/srv/traefik/traefik/conf
          type: DirectoryOrCreate

---
# dashboard.yaml
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard
  namespace: traefik
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`traefik.tinker.haus`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService
      middlewares:
        - name: default-ip-whitelist-local@kubernetescrd
        - name: default-redirect-to-https@kubernetescrd

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: high-priority-traefik
value: 1000000
globalDefault: false
description: "This priority class should be used for traefik"