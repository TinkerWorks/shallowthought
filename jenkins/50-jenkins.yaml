apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins
  namespace: jenkins
spec:
  serviceName: jenkins
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: jenkins
        image: registry.tinker.haus/jenkins # jenkins/jenkins:latest
        imagePullPolicy: Always
        ports:
        - name: webui
          containerPort: 8080
        - name: slaves
          containerPort: 50000
        env:
          - name: TZ
            value: "Europe/Bucharest"
          - name: PLUGINS_FORCE_UPGRADE
            value: "true"
          - name: JAVA_OPTS
            value: "-Dorg.csanchez.jenkins.plugins.kubernetes.pipeline.ContainerExecDecorator.websocketConnectionTimeout=180"
        volumeMounts:
          - name: jenkins-home
            mountPath: /var/jenkins_home
        livenessProbe:
          httpGet:
            path: /login
            port: webui
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 15
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins-home-claim
            
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jenkins-home-claim
  namespace: jenkins
spec:
  volumeName: jenkins-home
  accessModes:
  - ReadWriteMany
  storageClassName: my-local-storage
  resources:
    requests:
      storage: 100Gi
        
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-home
  namespace: jenkins
spec:
  capacity:
    storage: 100Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: my-local-storage
  local:
    path: /var/srv/jenkins/home
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - shallowthought
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jenkins-workspace-claim
  namespace: jenkins
spec:
  volumeName: jenkins-workspace
  accessModes:
  - ReadWriteMany
  storageClassName: my-local-storage
  resources:
    requests:
      storage: 500Gi
        
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-workspace
  namespace: jenkins
spec:
  capacity:
    storage: 500Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: my-local-storage
  local:
    path: /var/srv/jenkins/workspace
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - shallowthought

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: jenkins
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
    name: webinterface
  - port: 50000
    protocol: TCP
    targetPort: 50000
    name: slaveport
  type: NodePort
  selector:
    app: jenkins
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: jenkinsjenkins
      kind: Rule
      services:
        - name: jenkins
          port: 80
      middlewares:
        - name: default-ip-whitelist-plus-github-local@kubernetescrd
        - name: jenkins-strict-transport-security@kubernetescrd

---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strict-transport-security
  namespace: jenkins
spec:
  headers:
    stsPreload: true
    stsSeconds: 15552000
    customFrameOptionsValue: SAMEORIGIN
